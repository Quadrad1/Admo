.container,.row,.wrap,header{width:100%}.panel-info,.pay{vertical-align:top}*{margin:0;padding:0;color:#333;box-sizing:border-box;outline:0}.blue{color:#578bec!important}.red{color:#f03!important}a,p{color:inherit;font-family:inherit}.wrap{margin-bottom:20px;overflow-x:hidden}.row{display:-webkit-box;display:-ms-flexbox;display:flex}.logo,.side-bar{display:-webkit-box;display:-ms-flexbox}.row-wrap{-ms-flex-wrap:wrap;flex-wrap:wrap}a{text-decoration:none}li{list-style-type:none}p{font-size:inherit;font-weight:inherit}.head{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding-bottom:30px}.h-cont{padding-bottom:20px}.border{border-bottom:1px solid #dcdcdc}.margin-top{margin-top:15px}.logo{display:flex;width:160px;padding:10px 10px 10px 15px;font-size:50px;color:#666;font-weight:700;font-family:Muller-ExtraBold-DEMO,Helvetica,Roboto,Arial,sans-serif}.header-title p:last-child,.side-bar,.status-true{font-weight:600}.logo h3{font-size:inherit;color:#f03}.toogle-menu{display:none;-ms-flex-item-align:center;-ms-grid-row-align:center;align-self:center;width:30px;margin:10px;cursor:pointer}.side-bar{display:flex;width:440px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;font-size:16px;font-family:Helvetica,arial;color:#333}.side-bar li{margin:auto;width:30%}.side-bar li a:hover{text-decoration:underline}.ava-number{display:-webkit-box;display:-ms-flexbox;display:flex;width:70px;height:70px;border-radius:50%;background:#f7f6f6;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;font-size:30px;font-family:arial;box-shadow:inset 0 1px 4px 2px #d6d6d6;margin:0 10px 10px 12px}.header-title{display:inline-block;width:320px;margin:10px 10px 10px 30px}.header-title p{font-family:helvetica;font-size:18px;color:#585858;padding-bottom:10px}.row-cont{margin:auto;width:980px;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.content-cont{margin:auto;max-width:980px;background:#f5f5f5;overflow:hidden}.relation{width:55%;margin:auto auto 20px;position:relative}.relation__ration{padding-top:56.25%;height:0}.relation__content{position:absolute;background:#dcdcdc;width:100%;height:100%;top:0;left:0;border:none}.panel-item,.panel-title,footer{background:#fff}.relation__title{width:55%;margin:auto auto 20px;position:relative;text-transform:uppercase;color:#09f;font-family:Muller-Thin-DEMO,Helvetica,Roboto,Arial,sans-serif;font-weight:600}.ads-panel,.panel-item,footer{width:100%}footer{border-bottom:1px solid #dcdcdc}.panel-title{width:100%;padding:40px 50px;margin-top:30px;font-family:Helvetica;font-size:20px}.panel-item{padding:20px 15px 20px 50px;display:block;margin-top:20px}.panel-item img{width:220px;display:inline-block}.panel-item::after{clear:both;content:"";display:block}.panel-info{display:inline-block;width:330px;margin-left:10px}.panel-info-title{text-transform:uppercase;color:#585757;font-size:17px;font-family:helvetica}.video-date{font-family:helvetica;margin-top:30px;display:block;color:#969696}.status-true{font-family:Muller-Thin-DEMO,Helvetica,Roboto,Arial,sans-serif;margin-top:10px}.pay{background:#ffe400;display:inline-block;text-align:center;width:180px;padding:11px;font-size:18px;font-family:Helvetica;float:right;margin-top:40px}@media screen and (max-width:768px){.toogle-menu{display:-webkit-box;display:-ms-flexbox;display:flex}.side-bar{display:none;-ms-flex-wrap:wrap;flex-wrap:wrap;margin:auto;width:100%}.side-bar li{width:100%;padding-left:25px;text-align:center;margin:10px auto}.relation,.relation__title{width:98%}.panel-info,.panel-item img{width:60%;margin:10px auto;display:block}.relation__title{font-size:14px}.pay{float:none;display:block;margin:20px auto}}@media screen and (max-width:520px){.header-title p,.header-title p:last-child{font-size:16px;text-align:center}.ava-number{margin:auto!important}.header-title{width:300px}.panel-info,.panel-item img{width:90%}.panel-info-title{font-size:15px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
